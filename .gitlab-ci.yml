stages:
  - web
  - golang
  - deploy

cache:
  key: edu_system
  paths:
    - ./web/node_modules
    - ./web/client/node_modules
    - ./web/client/dist
    - ./app
    - ./vendor

job_web:
  stage: web
  image: node:14-alpine
  tags:
    - edu-front-end
  script:
    - npm config get registry
    - npm config set registry https://registry.npmmirror.com
    - npm config get registry
    - npm install pnpm -g
    - ls
    - cd ./web && pnpm install &&ls&& cd ./client && pnpm install
    - pnpm eslint:fix && pnpm stylelint:fix && pnpm build
    - ls
  only:
    - main

job_golang:
  stage: golang
  image: golang:alpine
  tags:
    - edu-back-end
  script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - ls
    - go env -w GOPROXY=https://proxy.golang.com.cn,direct
    - go get
    - go mod vendor
    # - go test ./test
    - go build -o app
    - chmod +x app
  # 提供生产包
  artifacts:
    paths:
      #      - ./web/client/dist
      - ./app

job_deploy:
  stage: deploy
  # image: rockylinux:9.1.20230215
#  image: rockylinux:latest
  image: centos:7
  only:
    - main
  tags:
    - edu-front-end
  script:
    - yum makecache
    - yum install -y sshpass rsync openssh-clients
    - ls
    - tar -czvf dist.tgz --exclude=node_modules -C ./web/client/dist . --remove-files
    - export SSHPASS="$PASSWORD"
    - sshpass -e scp -o stricthostkeychecking=no ./cmd/dir.sh dist.tgz root@192.168.0.158:/home/nginx/html/web
    - sshpass -e ssh -o stricthostkeychecking=no root@192.168.0.158 'cd /home/nginx/html/web && ls && bash dir.sh'
    # 排除无关文件 把go所需的文件移动到temp临时目录
    - sshpass -e rsync -a -e ssh -o stricthostkeychecking=no" --exclude="web" --exclude=".git" --exclude=".idea" --exclude="tmp" --exclude=".cache" . root@192.168.0.158:/home/nginx/html/web/temp
    - sshpass -e ssh -o stricthostkeychecking=no root@192.168.0.158 'cd /home/nginx/html/web/temp && bash ./cmd/go_build.sh && rm -rf /home/nginx/html/web && rm -rf /home/nginx/html/web/temp'
    - echo "OK"

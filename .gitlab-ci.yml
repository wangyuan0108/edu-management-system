stages:
  - web
  - golang
  - deploy

cache:
  key: edu_system
  paths:
    - ./web/node_modules
    - ./web/client/node_modules
    - ./web/client/dist
    - ./app
    - ./vendor
    - ./tag.txt

job_web:
  stage: web
  image: node:14-alpine
  tags:
    - edu-front-end
  script:
    - npm config set registry https://registry.npmmirror.com
    - npm install pnpm -g
    - cd ./web && pnpm install && ls && cd ./client && pnpm install
    - pnpm eslint:fix && pnpm stylelint:fix && pnpm build
  only:
    - main

job_golang:
  stage: golang
  image: golang:alpine
  tags:
    - edu-back-end
  script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - ls
    - go env -w GOPROXY=https://proxy.golang.com.cn,direct
    - go get
    - go mod vendor
    - go test ./test
    - go build -o app
    - chmod +x app
  # 提供生产包
  #artifacts:
  #  paths:
  #    - ./web/client/dist
  #    - ./app

job_deploy:
  stage: deploy
  # image: rockylinux:9.1.20230215
  #  image: rockylinux:latest
  image: centos:7
  only:
    - main
  tags:
    - edu-front-end
  script:
    - ls
    - echo "正在生成索引缓存索引提供搜索安装速度"
    - yum makecache
    - echo "下载所需工具"
    - yum install -y sshpass rsync openssh-clients
    - echo "加载环境变量"
    - export SSHPASS="$PASSWORD"
    - bash ./cmd/web_build.sh
    - bash ./cmd/go_build.sh
    - bash ./cmd/go_deploy.sh
    - bash ./cmd/clearCache.sh
    - echo "任务完成"
